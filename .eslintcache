[{"D:\\Localhost\\DevNag\\React-Babylon\\src\\reportWebVitals.js":"1","D:\\Localhost\\DevNag\\React-Babylon\\src\\App.js":"2","D:\\Localhost\\DevNag\\React-Babylon\\src\\index.js":"3","D:\\Localhost\\DevNag\\React-Babylon\\src\\components\\Cage.js":"4","D:\\Localhost\\DevNag\\React-Babylon\\src\\components\\Server.js":"5"},{"size":362,"mtime":1607533077686,"results":"6","hashOfConfig":"7"},{"size":2261,"mtime":1607757459552,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1607574892952,"results":"9","hashOfConfig":"7"},{"size":2649,"mtime":1607757220976,"results":"10","hashOfConfig":"7"},{"size":2062,"mtime":1607755419457,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uydr22",{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Localhost\\DevNag\\React-Babylon\\src\\reportWebVitals.js",[],"D:\\Localhost\\DevNag\\React-Babylon\\src\\App.js",["23","24","25","26","27","28","29"],"D:\\Localhost\\DevNag\\React-Babylon\\src\\index.js",[],"D:\\Localhost\\DevNag\\React-Babylon\\src\\components\\Cage.js",["30"],"import {\r\n    Engine, Scene, SceneLoader, ArcRotateCamera,\r\n    Vector3, Color3, DirectionalLight, HemisphericLight, CubeTexture\r\n} from '@babylonjs/core';\r\n\r\nclass Cage {\r\n    constructor() {\r\n        this.canvas = document.getElementById('myCanvas');\r\n        this.engine = new Engine(this.canvas, true, { preserveDrawingsBuffer: true, stencil: true });\r\n        this.scene = new Scene(this.engine);\r\n        this.camera = new ArcRotateCamera(\"camera1\", 1.0, 1.4, 12, new Vector3(0, 1, 0), this.scene);\r\n        this.init();\r\n        this.loadModel();\r\n        this.animate();\r\n    }\r\n\r\n    init() {\r\n        this.camera.alpha = Math.PI / 2;\r\n        this.camera.beta = 1.6;\r\n        this.camera.inputs.attached.keyboard.angularSpeed = 0;\r\n        this.camera.attachControl(this.canvas, true);\r\n        this.camera.upperRadiusLimit = 20;\r\n        this.camera.wheelPrecision = 50;\r\n        this.scene.clearColor = new Color3(0.5, 0.8, 0.5);\r\n        var light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), this.scene);\r\n        light.intensity = 0.6;\r\n        light.specular = Color3.Black();\r\n        var hdrTexture = CubeTexture.CreateFromPrefilteredData(\"./models/environment.dds\", this.scene);\r\n        hdrTexture.gammaSpace = false;\r\n        this.scene.environmentTexture = hdrTexture;\r\n    }\r\n\r\n    loadModel() {\r\n        Promise.all([\r\n            SceneLoader.ImportMeshAsync(null, \"./models/\", \"2.glb\", this.scene).then((result) => {\r\n                let env = result.meshes[0];\r\n                env.position = new Vector3(0, 0, -10)\r\n                env.scaling = new Vector3(1.2, 1, 0.8);\r\n                this.grid = env;\r\n            }),\r\n            SceneLoader.ImportMeshAsync(null, \"./models/\", \"db.glb\", this.scene).then((result) => {\r\n                let env = result.meshes[0];\r\n                env.position = new Vector3(2, 0, -6)\r\n                env.scaling = new Vector3(3, 3, 3);\r\n                var newDB = env.clone('');\r\n                newDB.position = new Vector3(-3, 0, -6);\r\n                newDB.scaling = new Vector3(3, 3, 3);\r\n            }),\r\n        ]).then(() => {\r\n            console.log('s');\r\n        });\r\n    }\r\n\r\n    setOpacity(a) {\r\n        var glassMat = this.scene.getMaterialByName('glass');\r\n        glassMat.alpha = a;\r\n    }\r\n    setSize(x, y, z) {\r\n        if (this.grid) {\r\n            this.grid.scaling = new Vector3(x, y, z);\r\n        }\r\n    }\r\n\r\n    animate() {\r\n        this.engine.runRenderLoop(() => {\r\n            this.scene.render();\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            this.engine.resize();\r\n        });\r\n    }\r\n}\r\n\r\nexport default Cage;","D:\\Localhost\\DevNag\\React-Babylon\\src\\components\\Server.js",["31","32"],{"ruleId":"33","severity":1,"message":"34","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":16},{"ruleId":"33","severity":1,"message":"37","line":2,"column":18,"nodeType":"35","messageId":"36","endLine":2,"endColumn":23},{"ruleId":"33","severity":1,"message":"38","line":2,"column":25,"nodeType":"35","messageId":"36","endLine":2,"endColumn":30},{"ruleId":"33","severity":1,"message":"39","line":3,"column":10,"nodeType":"35","messageId":"36","endLine":3,"endColumn":21},{"ruleId":"33","severity":1,"message":"40","line":3,"column":23,"nodeType":"35","messageId":"36","endLine":3,"endColumn":30},{"ruleId":"33","severity":1,"message":"41","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":12},{"ruleId":"33","severity":1,"message":"42","line":56,"column":9,"nodeType":"35","messageId":"36","endLine":56,"endColumn":16},{"ruleId":"33","severity":1,"message":"43","line":3,"column":22,"nodeType":"35","messageId":"36","endLine":3,"endColumn":38},{"ruleId":"33","severity":1,"message":"43","line":3,"column":22,"nodeType":"35","messageId":"36","endLine":3,"endColumn":38},{"ruleId":"33","severity":1,"message":"44","line":35,"column":21,"nodeType":"35","messageId":"36","endLine":35,"endColumn":24},"no-unused-vars","'Engine' is defined but never used.","Identifier","unusedVar","'Scene' is defined but never used.","'Model' is defined but never used.","'SceneLoader' is defined but never used.","'Vector3' is defined but never used.","'Cage' is defined but never used.","'_server' is assigned a value but never used.","'DirectionalLight' is defined but never used.","'env' is assigned a value but never used."]